{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","components/SwitchButton/SwitchButton.jsx","App.js","index.js","images/logo.PNG","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","lastUpdate","recovered","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","country","a","changableURL","axios","get","modifiedData","fetchDailyData","map","total","date","reportDate","countries","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchCountries","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","dailyData","setDailyData","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","options","responsive","maintainAspectRatio","legend","display","title","text","SwitchButton","changedarkmode","darktheme","style","fontWeight","Switch","checked","App","state","bool","setState","console","log","fetchedData","this","theme","createMuiTheme","palette","type","ThemeProvider","Paper","src","logo","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d143cb4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3h9Fu\",\"card\":\"Cards_card__3IKq4\",\"infected\":\"Cards_infected__uBVbq\",\"recovered\":\"Cards_recovered__3fEaE\",\"deaths\":\"Cards_deaths__2hc4o\"};","import React from 'react'\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core'\r\n\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data : {confirmed,deaths,lastUpdate,recovered}}) => {\r\n    // console.log(props);\r\n    if(!confirmed){\r\n        return \"Loading....\"\r\n    }\r\n    return(\r\n       <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography varaint=\"h5\">\r\n                        <CountUp start={0} end = {confirmed.value} duration={1.8} separator=\",\"/>\r\n                        </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">No of active COVID-19 cases</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography varaint=\"h5\">\r\n                        <CountUp start={0} end = {recovered.value} duration={1.8} separator=\",\"/>\r\n                        </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography> <Typography variant=\"body2\">No of Recovered COVID-19 cases</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n         \r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography varaint=\"h5\">\r\n                        <CountUp start={0} end = {deaths.value} duration={1.8} separator=\",\"/>\r\n                        </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">No of deaths from COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n\r\n           </Grid>\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changableURL = url;\r\n    if(country){\r\n        if(country !== \"global\"){\r\n        changableURL=`${url}/countries/${country}`\r\n    }}\r\n    try{\r\n        const {data :{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changableURL);\r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n        return modifiedData;\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() =>{\r\n    try{\r\n        \r\n         const {data} = await axios.get(`${url}/daily`)\r\n         const modifiedData = data.map(data => ({\r\n             confirmed:data.confirmed.total,\r\n             deaths:data.deaths.total,\r\n             date:data.reportDate,\r\n         }))\r\n         return modifiedData\r\n        //  console.log(data)\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const countries = async () => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n        return countries.map(country => country.name)\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {countries} from '../../api'\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange} ) => {\r\n\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchCountries = async () =>{\r\n            setFetchedCountries(await countries());\r\n        }\r\n        fetchCountries();\r\n    },[setFetchedCountries]);\r\n\r\n    // console.log(fetchedCountries)\r\n    return(\r\n        <FormControl className={styles.formcontrol}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key=   {i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React,{ useState , useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line,Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data,country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(( ) => {\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        //  console.log(dailyData + \"s\")\r\n\r\n        fetchAPI();\r\n    },[setDailyData]);\r\n\r\n\r\n    const lineChart =() =>(\r\n        dailyData.length?\r\n        <Line\r\n          data={{\r\n              labels: dailyData.map(({date}) => date),\r\n              datasets:[{\r\n                data:dailyData.map(({confirmed}) => confirmed),\r\n                label:'Infected',\r\n                borderColor: '#3333ff',\r\n                fill:true\r\n              },{\r\n                data:dailyData.map(({deaths}) => deaths),\r\n                label:'Infected',\r\n                borderColor: '#red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill:true\r\n              }],\r\n            options:{\r\n                responsive:true,\r\n                maintainAspectRatio: false,\r\n            }   \r\n          }\r\n        }\r\n\r\n        />:null  \r\n    )\r\n    // console.log(data)\r\n    const barChart = () =>(\r\n        data.confirmed?\r\n        <Bar\r\n        data = {{\r\n            labels:['Infected','Recovered','Deaths'],\r\n            datasets:[{\r\n                label:'People',\r\n                backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                data:[data.confirmed.value,data.recovered.value,data.deaths.value]\r\n            }]\r\n        }}\r\n        \r\n        options = {{\r\n            legend:{display:false},\r\n            title:{display:true,text:`${country}`}\r\n        }}\r\n        />\r\n        :null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container} >\r\n            {!country?lineChart():country!==\"global\"?barChart():lineChart()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react'\r\nimport {Typography,Switch} from '@material-ui/core'\r\nimport styles from './SwitchButton.module.css'\r\n\r\nconst SwitchButton = ({changedarkmode,darktheme}) =>{\r\n    return(\r\n        <div className={styles.container}>\r\n            <Typography style={{display:'inline-block',fontWeight:'700'}} variant=\"body1\" component=\"p\">Light</Typography>\r\n            <Switch checked={darktheme} onChange={(a) => changedarkmode(a.target.checked)}></Switch>\r\n            <Typography variant=\"body1\" style={{display:'inline-block',fontWeight:'700'}} component=\"p\">Dark</Typography>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default SwitchButton;","import React from 'react'\r\n// import Cards from './components/Cards/Cards';\r\n// import Chart from './components/Chart/Chart';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport logo from './images/logo.PNG'\r\nimport {Chart,Cards,CountryPicker,SwitchButton} from './components/';\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api';\r\nimport {Paper} from '@material-ui/core'\r\nimport {ThemeProvider,createMuiTheme} from '@material-ui/core/styles'\r\n\r\nclass App extends React.Component{\r\n    \r\n    state ={\r\n        data:{},\r\n        country:'',\r\n        darktheme:false\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        const fetchedData = await fetchData();\r\n        this.setState({\r\n            data:fetchedData\r\n        })\r\n        // console.log(fetchedData)\r\n    }\r\n    changedarkmode = (bool) => {\r\n       \r\n        this.setState({\r\n            darktheme:bool,\r\n        })\r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n        console.log(country)\r\n        const fetchedData = await fetchData(country)\r\n        console.log(fetchedData)\r\n        this.setState({\r\n            data:fetchedData,\r\n            country:country\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const {data,country,darktheme} = this.state;\r\n        const theme = createMuiTheme({\r\n            palette:{\r\n                type: this.state.darktheme?'dark':'light'\r\n            }\r\n        })\r\n        return(\r\n            <ThemeProvider theme={theme}>\r\n                <Paper>\r\n                    <div className={styles.container}>\r\n                        <img src={logo}  alt=\"Covid-19\" />\r\n                        <SwitchButton changedarkmode={this.changedarkmode} data={darktheme}/>\r\n                        <Cards data={data}/>\r\n                        <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                        <Chart data={data} country={country} />\r\n                    </div>\r\n                </Paper>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDom.render(<App/>, document.getElementById('root') )","module.exports = __webpack_public_path__ + \"static/media/logo.bf23f0e0.PNG\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1ashJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1RIxO\",\"img\":\"App_img__2bqEh\"};"],"sourceRoot":""}